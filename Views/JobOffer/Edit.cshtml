@model JobOfferCreateView


@{
    ViewData["Title"] = "Edit job offer";
}

<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>

<div style="font-size:50px; margin-top:10px">
    <a data-toggle="tooltip" title="Go back to job offer details" href="@Url.Action("Details", "Company", new { id = Model.Id })">
        <i class="glyphicon glyphicon-arrow-left"></i>
    </a>
</div>

<div>
    <h1 style="margin-top:0px">Edit job offer</h1>
    <div class="table-bordered" style="border:1px solid black">
        <div style="margin:30px">
            @using (Html.BeginForm("Edit", "JobOffer", FormMethod.Post, new { id = "create-form" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-group">
                    <label>Job title</label>
                    @Html.EditorFor(m => m.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.JobTitle, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>Company</label>
                    @Html.DropDownListFor(m => m.CompanyId, Model.Companies.Select(c => new SelectListItem { Text = c.Name, Value = c.Id.ToString() }), new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.CompanyId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>Location:</label>
                    @Html.EditorFor(m => m.Location, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Location, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>Salary</label>
                    <div class="input-group">
                        <span class="input-group-addon">PLN</span>
                        @Html.EditorFor(m => m.SalaryFrom, new { htmlAttributes = new { @class = "form-control", placeholder = "From" } })
                        <span class="input-group-addon">.00</span>
                    </div>
                    @Html.ValidationMessageFor(m => m.SalaryFrom, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <div class="input-group">
                        <span class="input-group-addon">PLN</span>
                        @Html.EditorFor(m => m.SalaryTo, new { htmlAttributes = new { @class = "form-control", placeholder = "To" } })
                        <span class="input-group-addon">.00</span>
                    </div>
                    @Html.ValidationMessageFor(m => m.SalaryTo, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>Valid until</label>
                    <div class="input-group">
                        @Html.EditorFor(m => m.ValidUntil, new { htmlAttributes = new { @class = "form-control", type = "Date" } })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(m => m.ValidUntil, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>Description</label>
                    @Html.TextAreaFor(m => m.Description, new { @class = "form-control", placeholder = "Enter description" })
                    @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                </div>
                <div style="margin-top:30px">
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            }
        </div>
    </div>
</div>

